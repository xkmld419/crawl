/*VER: 1*/ 
#ifndef TRUNK_SEG_BILLING_H_HEADER_INCLUDE_071006_YKS1
#define TRUNK_SEG_BILLING_H_HEADER_INCLUDE_071006_YKS1

//Code Generated by yangks for HaiNan. 2007.10.06

#include "TOCIQuery.h"
#include "Environment.h"
#include "CommonMacro.h"
#include "KeyTree.h"
#include "FormatMethod.h"

/*
alter table b_pn_seg_billing add switch_id   number(9);
alter table b_pn_seg_billing add trunk_in    varchar2(12);

表 b_pn_seg_billing 增加字段 switch_id trunk_id
用本地宏定义开关来控制是否使用 SegBillingExMgr::formatPNSegAccNbrEx() 
代替原来的逻辑 
formatPNSegAccNbrEx继承原函数FormatMethod::formatPNSegAccNBR() 所有逻辑功能

*/

class PNSegBilling;


class TrunkTreeNode 
{
  public:
    
    int   m_iSegBillingCnt;
    unsigned int m_iSegArray;//参数共享用 就不加宏限制了 这个是开始的偏移量
    PNSegBilling  *m_pSegArray;
};


class SegBillingMgr
{
  public:
    
    static bool m_bInited;
    
    static KeyTree<TrunkTreeNode *> *m_pSwtichTrunkTree; //同时限制交换机/中继的参数键树
    
    static KeyTree<TrunkTreeNode *> *m_pSwtichTree;      //只限制交换机的参数键树
    
    static TrunkTreeNode *m_pNolimitNode;                //不限制交换机/中继的参数列表
    
    static void load ();
    
    static void loadTrunkSeg (TrunkTreeNode *pNode, const char *sWhere);
    
    static PNSegBilling * getSegBilling (TrunkTreeNode *pNode, 
        char *_sAccNBR, char *_sAreaCode, char *_sDate);
        
    static PNSegBilling * getSegBilling(EventSection *poEvt, 
        char *_sAccNBR, char *_sAreaCode, char *_sDate);

    static bool segNotBilling(
        char *_sAccNBR, char *_sAreaCode, char *_sDate);
        
    static bool formatPNSegAccNbrEx (EventSection *poEvt);    
};

#endif
