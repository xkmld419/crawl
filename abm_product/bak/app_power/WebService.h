/* WebService.h
   Generated by wsdl2h 1.2.15 from http://132.228.131.134:9953/services/CVpdnIpService?wsdl http://132.228.91.6:80/ccatsida/services/AsigService?WSDL and typemap.dat
   2010-11-09 08:05:36 GMT

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

   gSOAP XML Web services tools.
   Copyright (C) 2001-2009 Robert van Engelen, Genivia Inc. All Rights Reserved.
   Part of this software is released under one of the following licenses:
   GPL or Genivia's license for commercial use.
*/

/** @page page_notes Build Notes

NOTE:

 - Run soapcpp2 on WebService.h to generate the SOAP/XML processing logic.
   Use soapcpp2 option -I to specify paths for #import
   To build with STL, 'stlvector.h' is imported from 'import' dir in package.
   Use soapcpp2 option -i to generate improved proxy and server classes.
 - Use wsdl2h options -c and -s to generate pure C code or C++ code without STL.
 - Use 'typemap.dat' to control namespace bindings and type mappings.
   It is strongly recommended to customize the names of the namespace prefixes
   generated by wsdl2h. To do so, modify the prefix bindings in the Namespaces
   section below and add the modified lines to 'typemap.dat' to rerun wsdl2h.
 - Use Doxygen (www.doxygen.org) on this file to generate documentation.
 - Use wsdl2h options -nname and -Nname to globally rename the prefix 'ns'.
 - Use wsdl2h option -d to enable DOM support for xsd:anyType.
 - Use wsdl2h option -g to auto-generate readers and writers for root elements.

WARNING:

   DO NOT INCLUDE THIS FILE DIRECTLY INTO YOUR PROJECT BUILDS.
   USE THE soapcpp2-GENERATED SOURCE CODE FILES FOR YOUR PROJECT BUILDS

LICENSE:

@verbatim
--------------------------------------------------------------------------------
gSOAP XML Web services tools
Copyright (C) 2000-2009, Robert van Engelen, Genivia Inc. All Rights Reserved.

This software is released under one of the following two licenses:
GPL or Genivia's license for commercial use.

GPL license.

This program is free software; you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation; either version 2 of the License, or (at your option) any later
version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
this program; if not, write to the Free Software Foundation, Inc., 59 Temple
Place, Suite 330, Boston, MA 02111-1307 USA

Author contact information:
engelen@genivia.com / engelen@acm.org
--------------------------------------------------------------------------------
A commercial use license is available from Genivia, Inc., contact@genivia.com
--------------------------------------------------------------------------------
@endverbatim

*/


//gsoapopt cw

/******************************************************************************\
 *                                                                            *
 * Definitions                                                                *
 *                                                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Import                                                                     *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Namespaces                                                          *
 *                                                                            *
\******************************************************************************/


/* NOTE:

It is strongly recommended to customize the names of the namespace prefixes
generated by wsdl2h. To do so, modify the prefix bindings below and add the
modified lines to typemap.dat to rerun wsdl2h:

ns1 = "http://vpdn.webservice.lcbms.linkage.com"
ns2 = "http://main.asig.regaltec.com"

*/

#define SOAP_NAMESPACE_OF_ns1	"http://vpdn.webservice.lcbms.linkage.com"
//gsoap ns1   schema namespace:	http://vpdn.webservice.lcbms.linkage.com
//gsoap ns1   schema elementForm:	qualified
//gsoap ns1   schema attributeForm:	unqualified

#define SOAP_NAMESPACE_OF_ns2	"http://main.asig.regaltec.com"
//gsoap ns2   schema namespace:	http://main.asig.regaltec.com
//gsoap ns2   schema elementForm:	qualified
//gsoap ns2   schema attributeForm:	unqualified

/******************************************************************************\
 *                                                                            *
 * Built-in Schema Types and Top-Level Elements and Attributes                *
 *                                                                            *
\******************************************************************************/



/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://vpdn.webservice.lcbms.linkage.com                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Types and Top-Level Elements and Attributes                         *
 *   http://main.asig.regaltec.com                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://vpdn.webservice.lcbms.linkage.com                                 *
 *                                                                            *
\******************************************************************************/


/// "http://vpdn.webservice.lcbms.linkage.com":VpdnIPRequest is a complexType.
struct ns1__VpdnIPRequest
{
/// Element imsi of type xs:string.
    char*                                imsi                          ;	///< Nullable pointer.
};

/// "http://vpdn.webservice.lcbms.linkage.com":VpdnIPResponse is a complexType.
struct ns1__VpdnIPResponse
{
/// Element ip of type xs:string.
    char*                                ip                            ;	///< Nullable pointer.
/// Element ret of type xs:int.
    int                                  ret                            1;	///< Required element.
};

/// "http://vpdn.webservice.lcbms.linkage.com":VpdnOnlineIPRequest is a complexType.
struct ns1__VpdnOnlineIPRequest
{
/// Element imsi of type xs:string.
    char*                                imsi                          ;	///< Nullable pointer.
};

/// "http://vpdn.webservice.lcbms.linkage.com":VpdnOnlineIPResponse is a complexType.
struct ns1__VpdnOnlineIPResponse
{
/// Element ip of type xs:string.
    char*                                ip                            ;	///< Nullable pointer.
/// Element ret of type xs:int.
    int                                  ret                            1;	///< Required element.
};


/// Top-level root element "http://vpdn.webservice.lcbms.linkage.com":GetVpdnIPByImsi

/// "http://vpdn.webservice.lcbms.linkage.com":GetVpdnIPByImsi is a complexType.
struct _ns1__GetVpdnIPByImsi
{
/// Element request of type "http://vpdn.webservice.lcbms.linkage.com":VpdnIPRequest.
    struct ns1__VpdnIPRequest*           request                        1;	///< Required element.
};


/// Top-level root element "http://vpdn.webservice.lcbms.linkage.com":GetVpdnIPByImsiResponse

/// "http://vpdn.webservice.lcbms.linkage.com":GetVpdnIPByImsiResponse is a complexType.
struct _ns1__GetVpdnIPByImsiResponse
{
/// Element GetVpdnIPByImsiReturn of type "http://vpdn.webservice.lcbms.linkage.com":VpdnIPResponse.
    struct ns1__VpdnIPResponse*          GetVpdnIPByImsiReturn          1;	///< Required element.
};


/// Top-level root element "http://vpdn.webservice.lcbms.linkage.com":GetVpdnOnlineIPByImsi

/// "http://vpdn.webservice.lcbms.linkage.com":GetVpdnOnlineIPByImsi is a complexType.
struct _ns1__GetVpdnOnlineIPByImsi
{
/// Element request of type "http://vpdn.webservice.lcbms.linkage.com":VpdnOnlineIPRequest.
    struct ns1__VpdnOnlineIPRequest*     request                        1;	///< Required element.
};


/// Top-level root element "http://vpdn.webservice.lcbms.linkage.com":GetVpdnOnlineIPByImsiResponse

/// "http://vpdn.webservice.lcbms.linkage.com":GetVpdnOnlineIPByImsiResponse is a complexType.
struct _ns1__GetVpdnOnlineIPByImsiResponse
{
/// Element GetVpdnOnlineIPByImsiReturn of type "http://vpdn.webservice.lcbms.linkage.com":VpdnOnlineIPResponse.
    struct ns1__VpdnOnlineIPResponse*    GetVpdnOnlineIPByImsiReturn    1;	///< Required element.
};

/******************************************************************************\
 *                                                                            *
 * Schema Complex Types and Top-Level Elements                                *
 *   http://main.asig.regaltec.com                                            *
 *                                                                            *
\******************************************************************************/



/// Top-level root element "http://main.asig.regaltec.com":executeSql

/// "http://main.asig.regaltec.com":executeSql is a complexType.
struct _ns2__executeSql
{
/// Element sqlId of type xs:string.
    char*                                sqlId                         ;	///< Nullable pointer.
/// Element sqlParam of type xs:string.
    char*                                sqlParam                      ;	///< Nullable pointer.
};


/// Top-level root element "http://main.asig.regaltec.com":executeSqlResponse

/// "http://main.asig.regaltec.com":executeSqlResponse is a complexType.
struct _ns2__executeSqlResponse
{
/// Element executeSqlReturn of type xs:string.
    char*                                executeSqlReturn              ;	///< Nullable pointer.
};


/// Top-level root element "http://main.asig.regaltec.com":executeUpdate

/// "http://main.asig.regaltec.com":executeUpdate is a complexType.
struct _ns2__executeUpdate
{
/// Element sql of type xs:string.
    char*                                sql                           ;	///< Nullable pointer.
};


/// Top-level root element "http://main.asig.regaltec.com":executeUpdateResponse

/// "http://main.asig.regaltec.com":executeUpdateResponse is a complexType.
struct _ns2__executeUpdateResponse
{
/// Element executeUpdateReturn of type xs:string.
    char*                                executeUpdateReturn           ;	///< Nullable pointer.
};


/// Top-level root element "http://main.asig.regaltec.com":executeSqlEx

/// "http://main.asig.regaltec.com":executeSqlEx is a complexType.
struct _ns2__executeSqlEx
{
/// Element sqlId of type xs:string.
    char*                                sqlId                         ;	///< Nullable pointer.
/// Element sqlParam of type xs:string.
    char*                                sqlParam                      ;	///< Nullable pointer.
/// Element pageSize of type xs:int.
    int                                  pageSize                       1;	///< Required element.
/// Element Nowpage of type xs:int.
    int                                  Nowpage                        1;	///< Required element.
};


/// Top-level root element "http://main.asig.regaltec.com":executeSqlExResponse

/// "http://main.asig.regaltec.com":executeSqlExResponse is a complexType.
struct _ns2__executeSqlExResponse
{
/// Element executeSqlExReturn of type xs:string.
    char*                                executeSqlExReturn            ;	///< Nullable pointer.
};


/// Top-level root element "http://main.asig.regaltec.com":executeProcedureEx

/// "http://main.asig.regaltec.com":executeProcedureEx is a complexType.
struct _ns2__executeProcedureEx
{
/// Element sql of type xs:string.
    char*                                sql                           ;	///< Nullable pointer.
/// Element sqlParam of type xs:string.
    char*                                sqlParam                      ;	///< Nullable pointer.
/// Element pageSize of type xs:int.
    int                                  pageSize                       1;	///< Required element.
/// Element nowPage of type xs:int.
    int                                  nowPage                        1;	///< Required element.
};


/// Top-level root element "http://main.asig.regaltec.com":executeProcedureExResponse

/// "http://main.asig.regaltec.com":executeProcedureExResponse is a complexType.
struct _ns2__executeProcedureExResponse
{
/// Element executeProcedureExReturn of type xs:string.
    char*                                executeProcedureExReturn      ;	///< Nullable pointer.
};


/// Top-level root element "http://main.asig.regaltec.com":executeQuery

/// "http://main.asig.regaltec.com":executeQuery is a complexType.
struct _ns2__executeQuery
{
/// Element sql of type xs:string.
    char*                                sql                           ;	///< Nullable pointer.
};


/// Top-level root element "http://main.asig.regaltec.com":executeQueryResponse

/// "http://main.asig.regaltec.com":executeQueryResponse is a complexType.
struct _ns2__executeQueryResponse
{
/// Element executeQueryReturn of type xs:string.
    char*                                executeQueryReturn            ;	///< Nullable pointer.
};


/// Top-level root element "http://main.asig.regaltec.com":executeQueryEx

/// "http://main.asig.regaltec.com":executeQueryEx is a complexType.
struct _ns2__executeQueryEx
{
/// Element sql of type xs:string.
    char*                                sql                           ;	///< Nullable pointer.
/// Element pageSize of type xs:int.
    int                                  pageSize                       1;	///< Required element.
/// Element nowPage of type xs:int.
    int                                  nowPage                        1;	///< Required element.
};


/// Top-level root element "http://main.asig.regaltec.com":executeQueryExResponse

/// "http://main.asig.regaltec.com":executeQueryExResponse is a complexType.
struct _ns2__executeQueryExResponse
{
/// Element executeQueryExReturn of type xs:string.
    char*                                executeQueryExReturn          ;	///< Nullable pointer.
};


/// Top-level root element "http://main.asig.regaltec.com":executeProcedure

/// "http://main.asig.regaltec.com":executeProcedure is a complexType.
struct _ns2__executeProcedure
{
/// Element sql of type xs:string.
    char*                                sql                           ;	///< Nullable pointer.
/// Element sqlParam of type xs:string.
    char*                                sqlParam                      ;	///< Nullable pointer.
};


/// Top-level root element "http://main.asig.regaltec.com":executeProcedureResponse

/// "http://main.asig.regaltec.com":executeProcedureResponse is a complexType.
struct _ns2__executeProcedureResponse
{
/// Element executeProcedureReturn of type xs:string.
    char*                                executeProcedureReturn        ;	///< Nullable pointer.
};


/// Top-level root element "http://main.asig.regaltec.com":executeQueryOra

/// "http://main.asig.regaltec.com":executeQueryOra is a complexType.
struct _ns2__executeQueryOra
{
/// Element sql of type xs:string.
    char*                                sql                           ;	///< Nullable pointer.
/// Element pageSize of type xs:int.
    int                                  pageSize                       1;	///< Required element.
/// Element nowPage of type xs:int.
    int                                  nowPage                        1;	///< Required element.
};


/// Top-level root element "http://main.asig.regaltec.com":executeQueryOraResponse

/// "http://main.asig.regaltec.com":executeQueryOraResponse is a complexType.
struct _ns2__executeQueryOraResponse
{
/// Element executeQueryOraReturn of type xs:string.
    char*                                executeQueryOraReturn         ;	///< Nullable pointer.
};


/// Top-level root element "http://main.asig.regaltec.com":executeXML

/// "http://main.asig.regaltec.com":executeXML is a complexType.
struct _ns2__executeXML
{
/// Element inXmlString of type xs:string.
    char*                                inXmlString                   ;	///< Nullable pointer.
};


/// Top-level root element "http://main.asig.regaltec.com":executeXMLResponse

/// "http://main.asig.regaltec.com":executeXMLResponse is a complexType.
struct _ns2__executeXMLResponse
{
/// Element executeXMLReturn of type xs:string.
    char*                                executeXMLReturn              ;	///< Nullable pointer.
};


/// Top-level root element "http://main.asig.regaltec.com":call

/// "http://main.asig.regaltec.com":call is a complexType.
struct _ns2__call
{
/// Element inXmlString of type xs:string.
    char*                                inXmlString                   ;	///< Nullable pointer.
};


/// Top-level root element "http://main.asig.regaltec.com":callResponse

/// "http://main.asig.regaltec.com":callResponse is a complexType.
struct _ns2__callResponse
{
/// Element callReturn of type xs:string.
    char*                                callReturn                    ;	///< Nullable pointer.
};

/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://vpdn.webservice.lcbms.linkage.com                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://vpdn.webservice.lcbms.linkage.com                                 *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Elements                                              *
 *   http://main.asig.regaltec.com                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Additional Top-Level Attributes                                            *
 *   http://main.asig.regaltec.com                                            *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Services                                                                   *
 *                                                                            *
\******************************************************************************/


//gsoap ns1  service name:	CVpdnIpServiceSoapBinding 
//gsoap ns1  service type:	CVpdnIpService 
//gsoap ns1  service port:	http://132.228.131.134:9953/services/CVpdnIpService 
//gsoap ns1  service namespace:	http://vpdn.webservice.lcbms.linkage.com 
//gsoap ns1  service transport:	http://schemas.xmlsoap.org/soap/http 

//gsoap ns2  service name:	AsigServiceSoapBinding 
//gsoap ns2  service type:	AsigService 
//gsoap ns2  service port:	http://132.228.91.6:80/ccatsida/services/AsigService 
//gsoap ns2  service namespace:	http://main.asig.regaltec.com 
//gsoap ns2  service transport:	http://schemas.xmlsoap.org/soap/http 

/** @mainpage Service Definitions

@section Service_bindings Service Bindings
  - @ref CVpdnIpServiceSoapBinding
  - @ref AsigServiceSoapBinding

@section Service_more More Information
- @ref page_notes "Notes"
- @ref page_XMLDataBinding "XML Data Binding"
- @ref SOAP_ENV__Header "SOAP Header Content"
- @ref SOAP_ENV__Detail "SOAP Fault Detail Content" (when applicable)


*/

/**

@page CVpdnIpServiceSoapBinding Binding "CVpdnIpServiceSoapBinding"

@section CVpdnIpServiceSoapBinding_operations Operations of Binding  "CVpdnIpServiceSoapBinding"
  - @ref __ns1__GetVpdnIPByImsi
  - @ref __ns1__GetVpdnOnlineIPByImsi

@section CVpdnIpServiceSoapBinding_ports Endpoints of Binding  "CVpdnIpServiceSoapBinding"
  - http://132.228.131.134:9953/services/CVpdnIpService

Note: use wsdl2h option -N to change the service binding prefix name

*/

/**

@page AsigServiceSoapBinding Binding "AsigServiceSoapBinding"

@section AsigServiceSoapBinding_operations Operations of Binding  "AsigServiceSoapBinding"
  - @ref __ns2__executeSql
  - @ref __ns2__executeUpdate
  - @ref __ns2__executeSqlEx
  - @ref __ns2__executeProcedureEx
  - @ref __ns2__executeQuery
  - @ref __ns2__executeQueryEx
  - @ref __ns2__executeProcedure
  - @ref __ns2__executeQueryOra
  - @ref __ns2__executeXML
  - @ref __ns2__call

@section AsigServiceSoapBinding_ports Endpoints of Binding  "AsigServiceSoapBinding"
  - http://132.228.91.6:80/ccatsida/services/AsigService

Note: use wsdl2h option -N to change the service binding prefix name

*/

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   CVpdnIpServiceSoapBinding                                                *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetVpdnIPByImsi                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetVpdnIPByImsi" of service binding "CVpdnIpServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetVpdnIPByImsi(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _ns1__GetVpdnIPByImsi*       ns1__GetVpdnIPByImsi,
    // response parameters:
    struct _ns1__GetVpdnIPByImsiResponse* ns1__GetVpdnIPByImsiResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetVpdnIPByImsi(
    struct soap *soap,
    // request parameters:
    struct _ns1__GetVpdnIPByImsi*       ns1__GetVpdnIPByImsi,
    // response parameters:
    struct _ns1__GetVpdnIPByImsiResponse* ns1__GetVpdnIPByImsiResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	GetVpdnIPByImsi document
//gsoap ns1  service method-encoding:	GetVpdnIPByImsi literal
//gsoap ns1  service method-action:	GetVpdnIPByImsi ""
int __ns1__GetVpdnIPByImsi(
    struct _ns1__GetVpdnIPByImsi*       ns1__GetVpdnIPByImsi,	///< Request parameter
    struct _ns1__GetVpdnIPByImsiResponse* ns1__GetVpdnIPByImsiResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns1__GetVpdnOnlineIPByImsi                                             *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns1__GetVpdnOnlineIPByImsi" of service binding "CVpdnIpServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns1__GetVpdnOnlineIPByImsi(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _ns1__GetVpdnOnlineIPByImsi* ns1__GetVpdnOnlineIPByImsi,
    // response parameters:
    struct _ns1__GetVpdnOnlineIPByImsiResponse* ns1__GetVpdnOnlineIPByImsiResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns1__GetVpdnOnlineIPByImsi(
    struct soap *soap,
    // request parameters:
    struct _ns1__GetVpdnOnlineIPByImsi* ns1__GetVpdnOnlineIPByImsi,
    // response parameters:
    struct _ns1__GetVpdnOnlineIPByImsiResponse* ns1__GetVpdnOnlineIPByImsiResponse
  );
@endcode

*/

//gsoap ns1  service method-style:	GetVpdnOnlineIPByImsi document
//gsoap ns1  service method-encoding:	GetVpdnOnlineIPByImsi literal
//gsoap ns1  service method-action:	GetVpdnOnlineIPByImsi ""
int __ns1__GetVpdnOnlineIPByImsi(
    struct _ns1__GetVpdnOnlineIPByImsi* ns1__GetVpdnOnlineIPByImsi,	///< Request parameter
    struct _ns1__GetVpdnOnlineIPByImsiResponse* ns1__GetVpdnOnlineIPByImsiResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Binding                                                            *
 *   AsigServiceSoapBinding                                                   *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__executeSql                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__executeSql" of service binding "AsigServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__executeSql(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _ns2__executeSql*            ns2__executeSql,
    // response parameters:
    struct _ns2__executeSqlResponse*    ns2__executeSqlResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__executeSql(
    struct soap *soap,
    // request parameters:
    struct _ns2__executeSql*            ns2__executeSql,
    // response parameters:
    struct _ns2__executeSqlResponse*    ns2__executeSqlResponse
  );
@endcode

*/

//gsoap ns2  service method-style:	executeSql document
//gsoap ns2  service method-encoding:	executeSql literal
//gsoap ns2  service method-action:	executeSql ""
int __ns2__executeSql(
    struct _ns2__executeSql*            ns2__executeSql,	///< Request parameter
    struct _ns2__executeSqlResponse*    ns2__executeSqlResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__executeUpdate                                                     *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__executeUpdate" of service binding "AsigServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__executeUpdate(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _ns2__executeUpdate*         ns2__executeUpdate,
    // response parameters:
    struct _ns2__executeUpdateResponse* ns2__executeUpdateResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__executeUpdate(
    struct soap *soap,
    // request parameters:
    struct _ns2__executeUpdate*         ns2__executeUpdate,
    // response parameters:
    struct _ns2__executeUpdateResponse* ns2__executeUpdateResponse
  );
@endcode

*/

//gsoap ns2  service method-style:	executeUpdate document
//gsoap ns2  service method-encoding:	executeUpdate literal
//gsoap ns2  service method-action:	executeUpdate ""
int __ns2__executeUpdate(
    struct _ns2__executeUpdate*         ns2__executeUpdate,	///< Request parameter
    struct _ns2__executeUpdateResponse* ns2__executeUpdateResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__executeSqlEx                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__executeSqlEx" of service binding "AsigServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__executeSqlEx(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _ns2__executeSqlEx*          ns2__executeSqlEx,
    // response parameters:
    struct _ns2__executeSqlExResponse*  ns2__executeSqlExResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__executeSqlEx(
    struct soap *soap,
    // request parameters:
    struct _ns2__executeSqlEx*          ns2__executeSqlEx,
    // response parameters:
    struct _ns2__executeSqlExResponse*  ns2__executeSqlExResponse
  );
@endcode

*/

//gsoap ns2  service method-style:	executeSqlEx document
//gsoap ns2  service method-encoding:	executeSqlEx literal
//gsoap ns2  service method-action:	executeSqlEx ""
int __ns2__executeSqlEx(
    struct _ns2__executeSqlEx*          ns2__executeSqlEx,	///< Request parameter
    struct _ns2__executeSqlExResponse*  ns2__executeSqlExResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__executeProcedureEx                                                *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__executeProcedureEx" of service binding "AsigServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__executeProcedureEx(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _ns2__executeProcedureEx*    ns2__executeProcedureEx,
    // response parameters:
    struct _ns2__executeProcedureExResponse* ns2__executeProcedureExResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__executeProcedureEx(
    struct soap *soap,
    // request parameters:
    struct _ns2__executeProcedureEx*    ns2__executeProcedureEx,
    // response parameters:
    struct _ns2__executeProcedureExResponse* ns2__executeProcedureExResponse
  );
@endcode

*/

//gsoap ns2  service method-style:	executeProcedureEx document
//gsoap ns2  service method-encoding:	executeProcedureEx literal
//gsoap ns2  service method-action:	executeProcedureEx ""
int __ns2__executeProcedureEx(
    struct _ns2__executeProcedureEx*    ns2__executeProcedureEx,	///< Request parameter
    struct _ns2__executeProcedureExResponse* ns2__executeProcedureExResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__executeQuery                                                      *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__executeQuery" of service binding "AsigServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__executeQuery(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _ns2__executeQuery*          ns2__executeQuery,
    // response parameters:
    struct _ns2__executeQueryResponse*  ns2__executeQueryResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__executeQuery(
    struct soap *soap,
    // request parameters:
    struct _ns2__executeQuery*          ns2__executeQuery,
    // response parameters:
    struct _ns2__executeQueryResponse*  ns2__executeQueryResponse
  );
@endcode

*/

//gsoap ns2  service method-style:	executeQuery document
//gsoap ns2  service method-encoding:	executeQuery literal
//gsoap ns2  service method-action:	executeQuery ""
int __ns2__executeQuery(
    struct _ns2__executeQuery*          ns2__executeQuery,	///< Request parameter
    struct _ns2__executeQueryResponse*  ns2__executeQueryResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__executeQueryEx                                                    *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__executeQueryEx" of service binding "AsigServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__executeQueryEx(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _ns2__executeQueryEx*        ns2__executeQueryEx,
    // response parameters:
    struct _ns2__executeQueryExResponse* ns2__executeQueryExResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__executeQueryEx(
    struct soap *soap,
    // request parameters:
    struct _ns2__executeQueryEx*        ns2__executeQueryEx,
    // response parameters:
    struct _ns2__executeQueryExResponse* ns2__executeQueryExResponse
  );
@endcode

*/

//gsoap ns2  service method-style:	executeQueryEx document
//gsoap ns2  service method-encoding:	executeQueryEx literal
//gsoap ns2  service method-action:	executeQueryEx ""
int __ns2__executeQueryEx(
    struct _ns2__executeQueryEx*        ns2__executeQueryEx,	///< Request parameter
    struct _ns2__executeQueryExResponse* ns2__executeQueryExResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__executeProcedure                                                  *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__executeProcedure" of service binding "AsigServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__executeProcedure(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _ns2__executeProcedure*      ns2__executeProcedure,
    // response parameters:
    struct _ns2__executeProcedureResponse* ns2__executeProcedureResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__executeProcedure(
    struct soap *soap,
    // request parameters:
    struct _ns2__executeProcedure*      ns2__executeProcedure,
    // response parameters:
    struct _ns2__executeProcedureResponse* ns2__executeProcedureResponse
  );
@endcode

*/

//gsoap ns2  service method-style:	executeProcedure document
//gsoap ns2  service method-encoding:	executeProcedure literal
//gsoap ns2  service method-action:	executeProcedure ""
int __ns2__executeProcedure(
    struct _ns2__executeProcedure*      ns2__executeProcedure,	///< Request parameter
    struct _ns2__executeProcedureResponse* ns2__executeProcedureResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__executeQueryOra                                                   *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__executeQueryOra" of service binding "AsigServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__executeQueryOra(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _ns2__executeQueryOra*       ns2__executeQueryOra,
    // response parameters:
    struct _ns2__executeQueryOraResponse* ns2__executeQueryOraResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__executeQueryOra(
    struct soap *soap,
    // request parameters:
    struct _ns2__executeQueryOra*       ns2__executeQueryOra,
    // response parameters:
    struct _ns2__executeQueryOraResponse* ns2__executeQueryOraResponse
  );
@endcode

*/

//gsoap ns2  service method-style:	executeQueryOra document
//gsoap ns2  service method-encoding:	executeQueryOra literal
//gsoap ns2  service method-action:	executeQueryOra ""
int __ns2__executeQueryOra(
    struct _ns2__executeQueryOra*       ns2__executeQueryOra,	///< Request parameter
    struct _ns2__executeQueryOraResponse* ns2__executeQueryOraResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__executeXML                                                        *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__executeXML" of service binding "AsigServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__executeXML(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _ns2__executeXML*            ns2__executeXML,
    // response parameters:
    struct _ns2__executeXMLResponse*    ns2__executeXMLResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__executeXML(
    struct soap *soap,
    // request parameters:
    struct _ns2__executeXML*            ns2__executeXML,
    // response parameters:
    struct _ns2__executeXMLResponse*    ns2__executeXMLResponse
  );
@endcode

*/

//gsoap ns2  service method-style:	executeXML document
//gsoap ns2  service method-encoding:	executeXML literal
//gsoap ns2  service method-action:	executeXML ""
int __ns2__executeXML(
    struct _ns2__executeXML*            ns2__executeXML,	///< Request parameter
    struct _ns2__executeXMLResponse*    ns2__executeXMLResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * Service Operation                                                          *
 *   __ns2__call                                                              *
 *                                                                            *
\******************************************************************************/


/// Operation "__ns2__call" of service binding "AsigServiceSoapBinding"

/**

Operation details:

  - SOAP document/literal style

C stub function (defined in soapClient.c[pp] generated by soapcpp2):
@code
  int soap_call___ns2__call(
    struct soap *soap,
    NULL, // char *endpoint = NULL selects default endpoint for this operation
    NULL, // char *action = NULL selects default action for this operation
    // request parameters:
    struct _ns2__call*                  ns2__call,
    // response parameters:
    struct _ns2__callResponse*          ns2__callResponse
  );
@endcode

C server function (called from the service dispatcher defined in soapServer.c[pp]):
@code
  int __ns2__call(
    struct soap *soap,
    // request parameters:
    struct _ns2__call*                  ns2__call,
    // response parameters:
    struct _ns2__callResponse*          ns2__callResponse
  );
@endcode

*/

//gsoap ns2  service method-style:	call document
//gsoap ns2  service method-encoding:	call literal
//gsoap ns2  service method-action:	call ""
int __ns2__call(
    struct _ns2__call*                  ns2__call,	///< Request parameter
    struct _ns2__callResponse*          ns2__callResponse	///< Response parameter
);

/******************************************************************************\
 *                                                                            *
 * XML Data Binding                                                           *
 *                                                                            *
\******************************************************************************/


/**

@page page_XMLDataBinding XML Data Binding

SOAP/XML services use data bindings contractually bound by WSDL and auto-generated by wsdl2h and soapcpp2 (see Service Bindings). Plain data bindings are adopted from XML schemas as part of the WSDL types section or when running wsdl2h on a set of schemas.

The following readers and writers are C/C++ data type (de)serializers auto-generated by wsdl2h and soapcpp2. Run soapcpp2 on this file to generate the (de)serialization code, which is stored in soapC.c[pp]. Include "soapH.h" in your code to import these data type and function declarations. Only use the soapcpp2-generated files in your project build. Do not include the wsdl2h-generated .h file in your code.

XML content can be retrieved from:
  - a FILE* fd, using soap->recvfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->is = ...
  - a buffer, using the soap->frecv() callback

XML content can be stored to:
  - a FILE* fd, using soap->sendfd = fd
  - a socket, using soap->socket = ...
  - a C++ stream, using soap->os = ...
  - a buffer, using the soap->fsend() callback


@section ns1 Top-level root elements of schema "http://vpdn.webservice.lcbms.linkage.com"

  - <ns1:GetVpdnIPByImsi> @ref _ns1__GetVpdnIPByImsi
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetVpdnIPByImsi(struct soap*, struct _ns1__GetVpdnIPByImsi*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetVpdnIPByImsi(struct soap*, struct _ns1__GetVpdnIPByImsi*);
    @endcode

  - <ns1:GetVpdnIPByImsiResponse> @ref _ns1__GetVpdnIPByImsiResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetVpdnIPByImsiResponse(struct soap*, struct _ns1__GetVpdnIPByImsiResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetVpdnIPByImsiResponse(struct soap*, struct _ns1__GetVpdnIPByImsiResponse*);
    @endcode

  - <ns1:GetVpdnOnlineIPByImsi> @ref _ns1__GetVpdnOnlineIPByImsi
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetVpdnOnlineIPByImsi(struct soap*, struct _ns1__GetVpdnOnlineIPByImsi*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetVpdnOnlineIPByImsi(struct soap*, struct _ns1__GetVpdnOnlineIPByImsi*);
    @endcode

  - <ns1:GetVpdnOnlineIPByImsiResponse> @ref _ns1__GetVpdnOnlineIPByImsiResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns1__GetVpdnOnlineIPByImsiResponse(struct soap*, struct _ns1__GetVpdnOnlineIPByImsiResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns1__GetVpdnOnlineIPByImsiResponse(struct soap*, struct _ns1__GetVpdnOnlineIPByImsiResponse*);
    @endcode

@section ns2 Top-level root elements of schema "http://main.asig.regaltec.com"

  - <ns2:executeSql> @ref _ns2__executeSql
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__executeSql(struct soap*, struct _ns2__executeSql*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__executeSql(struct soap*, struct _ns2__executeSql*);
    @endcode

  - <ns2:executeSqlResponse> @ref _ns2__executeSqlResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__executeSqlResponse(struct soap*, struct _ns2__executeSqlResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__executeSqlResponse(struct soap*, struct _ns2__executeSqlResponse*);
    @endcode

  - <ns2:executeUpdate> @ref _ns2__executeUpdate
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__executeUpdate(struct soap*, struct _ns2__executeUpdate*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__executeUpdate(struct soap*, struct _ns2__executeUpdate*);
    @endcode

  - <ns2:executeUpdateResponse> @ref _ns2__executeUpdateResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__executeUpdateResponse(struct soap*, struct _ns2__executeUpdateResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__executeUpdateResponse(struct soap*, struct _ns2__executeUpdateResponse*);
    @endcode

  - <ns2:executeSqlEx> @ref _ns2__executeSqlEx
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__executeSqlEx(struct soap*, struct _ns2__executeSqlEx*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__executeSqlEx(struct soap*, struct _ns2__executeSqlEx*);
    @endcode

  - <ns2:executeSqlExResponse> @ref _ns2__executeSqlExResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__executeSqlExResponse(struct soap*, struct _ns2__executeSqlExResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__executeSqlExResponse(struct soap*, struct _ns2__executeSqlExResponse*);
    @endcode

  - <ns2:executeProcedureEx> @ref _ns2__executeProcedureEx
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__executeProcedureEx(struct soap*, struct _ns2__executeProcedureEx*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__executeProcedureEx(struct soap*, struct _ns2__executeProcedureEx*);
    @endcode

  - <ns2:executeProcedureExResponse> @ref _ns2__executeProcedureExResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__executeProcedureExResponse(struct soap*, struct _ns2__executeProcedureExResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__executeProcedureExResponse(struct soap*, struct _ns2__executeProcedureExResponse*);
    @endcode

  - <ns2:executeQuery> @ref _ns2__executeQuery
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__executeQuery(struct soap*, struct _ns2__executeQuery*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__executeQuery(struct soap*, struct _ns2__executeQuery*);
    @endcode

  - <ns2:executeQueryResponse> @ref _ns2__executeQueryResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__executeQueryResponse(struct soap*, struct _ns2__executeQueryResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__executeQueryResponse(struct soap*, struct _ns2__executeQueryResponse*);
    @endcode

  - <ns2:executeQueryEx> @ref _ns2__executeQueryEx
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__executeQueryEx(struct soap*, struct _ns2__executeQueryEx*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__executeQueryEx(struct soap*, struct _ns2__executeQueryEx*);
    @endcode

  - <ns2:executeQueryExResponse> @ref _ns2__executeQueryExResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__executeQueryExResponse(struct soap*, struct _ns2__executeQueryExResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__executeQueryExResponse(struct soap*, struct _ns2__executeQueryExResponse*);
    @endcode

  - <ns2:executeProcedure> @ref _ns2__executeProcedure
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__executeProcedure(struct soap*, struct _ns2__executeProcedure*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__executeProcedure(struct soap*, struct _ns2__executeProcedure*);
    @endcode

  - <ns2:executeProcedureResponse> @ref _ns2__executeProcedureResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__executeProcedureResponse(struct soap*, struct _ns2__executeProcedureResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__executeProcedureResponse(struct soap*, struct _ns2__executeProcedureResponse*);
    @endcode

  - <ns2:executeQueryOra> @ref _ns2__executeQueryOra
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__executeQueryOra(struct soap*, struct _ns2__executeQueryOra*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__executeQueryOra(struct soap*, struct _ns2__executeQueryOra*);
    @endcode

  - <ns2:executeQueryOraResponse> @ref _ns2__executeQueryOraResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__executeQueryOraResponse(struct soap*, struct _ns2__executeQueryOraResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__executeQueryOraResponse(struct soap*, struct _ns2__executeQueryOraResponse*);
    @endcode

  - <ns2:executeXML> @ref _ns2__executeXML
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__executeXML(struct soap*, struct _ns2__executeXML*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__executeXML(struct soap*, struct _ns2__executeXML*);
    @endcode

  - <ns2:executeXMLResponse> @ref _ns2__executeXMLResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__executeXMLResponse(struct soap*, struct _ns2__executeXMLResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__executeXMLResponse(struct soap*, struct _ns2__executeXMLResponse*);
    @endcode

  - <ns2:call> @ref _ns2__call
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__call(struct soap*, struct _ns2__call*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__call(struct soap*, struct _ns2__call*);
    @endcode

  - <ns2:callResponse> @ref _ns2__callResponse
    @code
    // Reader (returns SOAP_OK on success):
    soap_read__ns2__callResponse(struct soap*, struct _ns2__callResponse*);
    // Writer (returns SOAP_OK on success):
    soap_write__ns2__callResponse(struct soap*, struct _ns2__callResponse*);
    @endcode

*/

/* End of WebService.h */
